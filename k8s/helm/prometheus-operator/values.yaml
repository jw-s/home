additionalPrometheusRules: []
alertmanager:
  enabled: false
coreDns:
  enabled: true
grafana:
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  ingress:
    enabled: true
    annotations:
      "cert-manager.io/issuer": letsencrypt-prod
    hosts:
      - "grafana.jdws.dev"
    path: "/"
    tls:
      - hosts:
        - grafana.jdws.dev
        secretName: grafana-tls
  grafana.ini:
    server:
      root_url: https://grafana.jdws.dev
    auth.github:
      enabled: true
      client_id: id
      client_secret: secret
      scopes: user:email,read:org
      auth_url: https://github.com/login/oauth/authorize
      token_url: https://github.com/login/oauth/access_token
      api_url: https://api.github.com/user
      allow_sign_up: true
      allowed_organizations: haggis-io
  sidecar:
    image: joelws/k8s-sidecar:0.1.99-arm
  additionalDataSources: []
  enabled: true
kube-state-metrics:
  enabled: true
  image:
    repository: joelws/kube-state-metrics-arm
    tag: v1.9.5
    pullPolicy: IfNotPresent
kubeApiServer:
  enabled: true
kubeControllerManager:
  enabled: true
  endpoints: 
    - 192.168.178.23
kubeEtcd:
  enabled: false
  endpoints: 
    - 192.168.178.23
kubeProxy:
  enabled: true
  endpoints: 
    - 192.168.178.23
    - 192.168.178.30
kubeScheduler:
  enabled: true
  endpoints: 
    - 192.168.178.23
kubeStateMetrics:
  enabled: true
kubelet:
  enabled: true
  namespace: kube-system
nodeExporter:
  enabled: true
prometheus:
  additionalPodMonitors: []
  additionalServiceMonitors: []
  annotations: {}
  enabled: true
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    labels: {}
    paths: []
    tls: []
  ingressPerReplica:
    annotations: {}
    enabled: false
    hostDomain: ""
    hostPrefix: ""
    labels: {}
    paths: []
    tlsSecretName: ""
    tlsSecretPerReplica:
      enabled: false
      prefix: prometheus
  podDisruptionBudget:
    enabled: false
    maxUnavailable: ""
    minAvailable: 1
  podSecurityPolicy:
    allowedCapabilities: []
  prometheusSpec:
    image:
      repository: quay.io/prometheus/prometheus
      tag: v2.17.2
    replicas: 1
    resources: {}
    retention: 10d
    retentionSize: "5GB"
    walCompression: true
prometheusOperator:
  admissionWebhooks:
    enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: quay.io/coreos/prometheus-operator
    tag: v0.39.0
  kubeletService:
    enabled: true
    namespace: kube-system
  manageCrds: false # disabled until upstream chart is fixed
  configmapReloadImage:
    repository: jimmidyson/configmap-reload
    tag: v0.3.0
  prometheusConfigReloaderImage:
    repository: quay.io/coreos/prometheus-config-reloader
    tag: v0.39.0
  resources: {}
  tlsProxy:
    enabled: false